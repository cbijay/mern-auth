{"version":3,"sources":["components/auth/styles/authStyle.js","components/auth/layouts/AuthHeader.js","components/auth/layouts/AuthFooter.js","context/AppContext.js","components/auth/errors/Error.js","components/auth/pages/Login.js","components/auth/pages/Register.js","components/admin/styles/adminHeader.js","components/admin/layouts/AdminHeader.js","components/admin/pages/Dashboard.js","App.js","serviceWorker.js","index.js","images/boiling-head-logo.png"],"names":["authStyles","makeStyles","theme","logo","width","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","height","borderRadius","title","padding","textAlign","borderBottom","grey","form","inputField","btnSubmit","background","color","gridLink","justifyContent","routeLink","AuthHeader","classes","Avatar","className","src","alt","AuthFooter","Box","mt","Typography","variant","align","Date","getFullYear","AppContext","createContext","Error","message","clearError","Alert","severity","action","IconButton","aria-label","size","onClick","fontSize","Login","history","useHistory","useContext","authUser","setAuthUser","useState","email","password","inputValue","setInputValue","error","setError","useEffect","user","push","handleChange","e","target","name","value","handleLogin","a","preventDefault","Axios","post","process","loginRes","data","localStorage","setItem","token","response","Container","component","maxWidth","Card","root","CardHeader","CardContent","cardContent","undefined","onSubmit","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","Grid","container","Register","fullName","confirmPassword","handleRegister","item","xs","justify","adminHeaderStyle","flexGrow","menuButton","marginRight","AdminHeader","AppBar","position","Toolbar","edge","Dashboard","App","getItem","headers","get","userRes","checkLoggedin","Provider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.c1ede1b9.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst authStyles = makeStyles((theme) => ({\n  logo: {\n    width: \"100%\",\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"transparent !important\",\n    width: \"150px\",\n    height: \"auto\",\n    borderRadius: \"0\",\n  },\n  title: {\n    padding: `${theme.spacing(1, 0, 1)} !important`,\n    textAlign: \"center\",\n    borderBottom: `1px solid ${grey[300]}`,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n  },\n  inputField: {\n    margin: \"0 0 8px !important\",\n  },\n  btnSubmit: {\n    margin: `${theme.spacing(2, 0, 2)} !important`,\n    background: `${grey[900]} !important`,\n    color: \"#fff !important\",\n  },\n  gridLink: {\n    justifyContent: \"center\",\n  },\n  routeLink: {\n    background: \"none !important\",\n  },\n}));\n\nexport default authStyles;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport logo from \"../../../images/boiling-head-logo.png\";\nimport authStyles from \"../styles/authStyle\";\n\nexport default function AuthHeader() {\n  const classes = authStyles();\n\n  return (\n    <>\n      <Avatar className={classes.avatar}>\n        <img src={logo} alt=\"Boiling Head\" className={classes.logo} />\n      </Avatar>\n    </>\n  );\n}\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction AuthFooter() {\n  return (\n    <Box mt={8}>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {`Copyright © ${new Date().getFullYear()} Boiling Head`}\n      </Typography>\n    </Box>\n  );\n}\n\nexport default AuthFooter;\n","import { createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n","import React from \"react\";\nimport { Alert } from \"@material-ui/lab\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nexport default function Error({ message, clearError }) {\n  return (\n    <Alert\n      variant=\"filled\"\n      severity=\"error\"\n      action={\n        <IconButton\n          aria-label=\"close\"\n          color=\"inherit\"\n          size=\"small\"\n          onClick={() => {\n            clearError();\n          }}\n        >\n          <CloseIcon fontSize=\"inherit\" />\n        </IconButton>\n      }\n    >\n      {message}\n    </Alert>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthHeader from \"../layouts/AuthHeader\";\nimport AuthFooter from \"../layouts/AuthFooter\";\nimport authStyles from \"../styles/authStyle\";\nimport Axios from \"axios\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport Error from \"../errors/Error\";\nimport {\n  Container,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\n\nfunction Login() {\n  const classes = authStyles();\n  const history = useHistory();\n\n  const { authUser, setAuthUser } = useContext(AppContext);\n  const [inputValue, setInputValue] = useState({ email: \"\", password: \"\" });\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    if (authUser.user) {\n      history.push(\"dashboard\");\n    }\n  });\n\n  const registerLink = () => {\n    history.push(\"register\");\n  };\n\n  const handleChange = (e) => {\n    setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const loginRes = await Axios.post(\n        process.env.REACT_APP_API_URL + \"/api/users/login\",\n        inputValue\n      );\n\n      //Store logged in user to context api's authUser variable\n      setAuthUser(loginRes.data);\n\n      //Store logged in user details in local storage\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n\n      //Redirects to dashboard after successfully logged in\n      history.push(\"dashboard\");\n    } catch (err) {\n      err.response.data.message && setError(err.response.data.message);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <AuthHeader />\n        <Card className={classes.root}>\n          <CardHeader title=\"Log In\" className={classes.title} />\n          <CardContent className={classes.cardContent}>\n            {error && (\n              <Error message={error} clearError={() => setError(undefined)} />\n            )}\n            <form className={classes.form} onSubmit={handleLogin} noValidate>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                className={classes.inputField}\n                onChange={handleChange}\n                value={inputValue.email}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                className={classes.inputField}\n                autoComplete=\"password\"\n                onChange={handleChange}\n                value={inputValue.password}\n              />\n              <Button type=\"submit\" fullWidth className={classes.btnSubmit}>\n                Log In\n              </Button>\n              <Grid container className={classes.gridLink}>\n                <Button onClick={registerLink} className={classes.routeLink}>\n                  {\"Don't have an account? Sign Up\"}\n                </Button>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n      <AuthFooter />\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthHeader from \"../layouts/AuthHeader\";\nimport AuthFooter from \"../layouts/AuthFooter\";\nimport authStyles from \"../styles/authStyle\";\nimport Axios from \"axios\";\nimport {\n  Container,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport Error from \"../errors/Error\";\n\nfunction Register() {\n  const classes = authStyles();\n  const history = useHistory();\n  const { authUser, setAuthUser } = useContext(AppContext);\n\n  useEffect(() => {\n    if (authUser.user) {\n      history.push(\"dashboard\");\n    }\n  });\n\n  const [inputValue, setInputValue] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const [error, setError] = useState();\n\n  const loginLink = () => {\n    history.push(\"/\");\n  };\n\n  const handleChange = (e) => {\n    setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    try {\n      await Axios.post(\n        process.env.REACT_APP_API_URL + \"/api/users/register\",\n        inputValue\n      );\n\n      const loginRes = await Axios.post(\n        process.env.REACT_APP_API_URL + \"/users/login\",\n        {\n          email: inputValue.email,\n          password: inputValue.password,\n        }\n      );\n\n      //Store logged in user to context api's authUser variable\n      setAuthUser(loginRes.data);\n\n      //Store logged in user details in local storage\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n\n      //Redirects to dashboard after successfully register\n      history.push(\"dashboard\");\n    } catch (err) {\n      err.response.data.message && setError(err.response.data.message);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <AuthHeader />\n        <Card className={classes.root}>\n          <CardHeader title=\"Register\" className={classes.title} />\n          <CardContent className={classes.cardContent}>\n            {error && (\n              <Error message={error} clearError={() => setError(undefined)} />\n            )}\n            <form className={classes.form} onSubmit={handleRegister} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"fullName\"\n                    required\n                    fullWidth\n                    id=\"fullName\"\n                    label=\"Full Name\"\n                    className={classes.inputField}\n                    autoFocus\n                    value={inputValue.fullName}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    className={classes.inputField}\n                    autoComplete=\"email\"\n                    value={inputValue.email}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    className={classes.inputField}\n                    autoComplete=\"current-password\"\n                    value={inputValue.password}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    className={classes.inputField}\n                    autoComplete=\"password\"\n                    onChange={handleChange}\n                    value={inputValue.confirmPassword}\n                  />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" fullWidth className={classes.btnSubmit}>\n                Register\n              </Button>\n              <Grid container justify=\"center\">\n                <Grid item>\n                  <Button onClick={loginLink} className={classes.routeLink}>\n                    Already have an account? Log in\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n      <AuthFooter />\n    </Container>\n  );\n}\n\nexport default Register;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst adminHeaderStyle = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default adminHeaderStyle;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport adminHeaderStyle from \"../styles/adminHeader\";\nimport { AppContext } from \"../../../context/AppContext\";\n\nfunction AdminHeader() {\n  const classes = adminHeaderStyle();\n\n  const { setAuthUser } = useContext(AppContext);\n  const history = useHistory();\n\n  const handleLogout = () => {\n    setAuthUser({\n      token: undefined,\n      user: undefined,\n    });\n\n    localStorage.setItem(\"auth-token\", \"\");\n    history.push(\"/\");\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Boiling Head\n          </Typography>\n          <Button color=\"inherit\" onClick={handleLogout}>\n            Log out\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nexport default AdminHeader;\n","import React from \"react\";\nimport AdminHeader from \"../layouts/AdminHeader\";\n\n\nfunction Dashboard() {\n  return <AdminHeader />;\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/pages/Login\";\nimport Register from \"./components/auth/pages/Register\";\nimport Dashboard from \"./components/admin/pages/Dashboard\";\nimport { AppContext } from \"./context/AppContext\";\nimport Axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [authUser, setAuthUser] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    //Checks whether user is alreay logged in\n    const checkLoggedin = async () => {\n      //Retrieve token from local storage\n      let token = localStorage.getItem(\"auth-token\");\n\n      //Checks whether token value is empty and set token value in local storage\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      //Validate local storage token with login token\n      const tokenRes = await Axios.post(\n        process.env.REACT_APP_API_URL + \"/api/users/tokenIsValid\",\n        null,\n        {\n          headers: { \"x-auth-token\": token },\n        }\n      );\n\n      //Checks if token has data and store token's response data in contextapi\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\n          process.env.REACT_APP_API_URL + \"/api/users/\",\n          {\n            headers: { \"x-auth-token\": token },\n          }\n        );\n\n        setAuthUser({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedin();\n  }, []);\n\n  return (\n    <AppContext.Provider value={{ authUser, setAuthUser }}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/boiling-head-logo.bffeede1.png\";"],"sourceRoot":""}